{"version":3,"sources":["components/waves.js","App.js","reportWebVitals.js","index.js"],"names":["Waves","lon","lat","waves","Object","keys","map","key","index","class","App","state","handlechangeLat","bind","handlechangeLon","handlebuttonclick","e","this","setState","target","value","fetch","then","res","json","data","catch","console","log","type","step","placeholder","onChange","style","margin","onClick","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAqBeA,EAjBD,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,IAAKC,EAAiB,EAAjBA,IAAKC,EAAY,EAAZA,MACzB,OACE,gCACE,iCAAQ,wDAAmC,KAARD,EAAaA,EAAM,UAA9C,qBAAmF,KAARD,EAAaA,EAAM,eAErGG,OAAOC,KAAKF,GAAOG,KAAI,SAACC,EAAKC,GAAN,OACtB,qBAAKC,MAAM,OAAX,SACE,sBAAKA,MAAM,YAAX,UACE,oBAAIA,MAAM,aAAV,SAAwBF,IACxB,mBAAGE,MAAM,YAAT,SAAsBN,EAAMI,iBCqDzBG,E,kDA9DX,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXV,IAAK,GACLC,IAAK,GACLC,MAAO,IAET,EAAKS,gBAAkB,EAAKA,gBAAgBC,KAArB,gBACvB,EAAKC,gBAAkB,EAAKA,gBAAgBD,KAArB,gBACvB,EAAKE,kBAAoB,EAAKA,kBAAkBF,KAAvB,gBATb,E,4DAYEG,GACdC,KAAKC,SAAS,CAAChB,IAAKc,EAAEG,OAAOC,U,sCAGfJ,GACdC,KAAKC,SAAS,CAACjB,IAAKe,EAAEG,OAAOC,U,wCAGbJ,GAAI,IAAD,OACjBK,MAAM,uEAAuEJ,KAAKN,MAAMT,IAAI,QAAQe,KAAKN,MAAMV,KAC1GqB,MACG,SAAAC,GAAG,OAAIA,EAAIC,UACbF,MAAK,SAACG,GACJ,EAAKP,SAAS,CACVf,MAAOsB,OAGdC,MAAMC,QAAQC,O,+BAmBnB,OAHAD,QAAQC,IAAI,OAASX,KAAKN,MAAMT,KAChCyB,QAAQC,IAAI,OAASX,KAAKN,MAAMV,KAChC0B,QAAQC,IAAIX,KAAKN,MAAMR,OAEnB,gCACI,iCAAQ,gDACR,gDAAkB,uBAAO0B,KAAK,SAASC,KAAK,MAAMC,YAAY,iBAAiBC,SAAUf,KAAKL,qBAC9F,iDAAmB,uBAAOiB,KAAK,SAASC,KAAK,MAAMC,YAAY,kBAAkBC,SAAUf,KAAKH,qBAChG,iCAAQ,wBAAQmB,MAAO,CAACC,OAAQ,QAAYL,KAAK,SAASpB,MAAM,kBAAkB0B,QAASlB,KAAKF,kBAAxF,+BAGR,cAAC,EAAD,CAAOb,IAAKe,KAAKN,MAAMT,IAAKD,IAAKgB,KAAKN,MAAMV,IAAKE,MAAOc,KAAKN,MAAMR,e,GAzDjEiC,aCSHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b9f54cbc.chunk.js","sourcesContent":["import React from 'react'\n// import './react-vis-style.css';\n// import {XYPlot, LineSeries} from 'react-vis';\n\nconst Waves = ({ lon, lat, waves }) => {\n  return (\n    <div>\n      <center><p>Your input latitude is {lat !== '' ? lat : 'unknown'} and longitude is {lon !== '' ? lon : 'unknown'}</p></center>\n\n      {Object.keys(waves).map((key, index) => (\n        <div class=\"card\">\n          <div class=\"card-body\">\n            <h5 class=\"card-title\">{key}</h5>\n            <p class=\"card-text\">{waves[key]}</p>\n          </div>\n        </div>\n      ))}\n    </div>\n  )\n};\n\nexport default Waves\n","import React, { Component } from 'react';\nimport Waves from './components/waves';\n\nclass App extends Component {\n    constructor() {\n      super();\n      this.state = {\n        lon: '',\n        lat: '',\n        waves: {}\n      }\n      this.handlechangeLat = this.handlechangeLat.bind(this);\n      this.handlechangeLon = this.handlechangeLon.bind(this);\n      this.handlebuttonclick = this.handlebuttonclick.bind(this);\n    }\n\n    handlechangeLat(e) {\n      this.setState({lat: e.target.value});\n    }\n\n    handlechangeLon(e) {\n      this.setState({lon: e.target.value});\n    }\n\n    handlebuttonclick(e) {\n        fetch('https://europe-west1-freesolarcalc.cloudfunctions.net/wave_max/?lat='+this.state.lat+'&lon='+this.state.lon)\n            .then(\n                res => res.json()\n            ).then((data) => {\n                this.setState({\n                    waves: data\n                })\n            })\n            .catch(console.log)\n    }\n\n    // componentDidMount() {\n    //     fetch('https://europe-west1-freesolarcalc.cloudfunctions.net/wave_max/?lat=4.6&lon=1.3')\n    //         .then(\n    //             res => res.json()\n    //         ).then((data) => {\n    //             this.setState({\n    //                 waves: data\n    //             })\n    //         })\n    //         .catch(console.log)\n    // }\n\n    render() {\n        console.log('lat:' + this.state.lat)\n        console.log('lon:' + this.state.lon)\n        console.log(this.state.waves)\n        return (\n            <div>\n                <center><h1>Wave Heights</h1></center>\n                <center>Latitude: <input type='number' step=\"0.1\" placeholder=\"Enter latitude\" onChange={this.handlechangeLat}/></center>\n                <center>Longitude: <input type='number' step=\"0.1\" placeholder=\"Enter longitude\" onChange={this.handlechangeLon}/></center>\n                <center><button style={{margin: 20 + 'px'}} type=\"button\" class=\"btn btn-primary\" onClick={this.handlebuttonclick}>\n                    Get Information\n                </button></center>\n                <Waves lat={this.state.lat} lon={this.state.lon} waves={this.state.waves}/>\n            </div>\n        )\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}